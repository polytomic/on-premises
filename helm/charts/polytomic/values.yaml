# Default values for polytomic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # -- Image repository
  repository: 568237466542.dkr.ecr.us-west-2.amazonaws.com/polytomic-onprem
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# -- Reference to one or more secrets to be used when pulling images
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  # -- Name of the ingress class to route through this controller
  className: nginx
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

polytomic:
  # valid values are debug, info, warn, error; the default is info
  log_level: info

  env: ""

  deployment:
    # -- A unique identifier for your on premises deploy, provided by Polytomic.
    name: ""
    # -- The license key for your deployment, provided by Polytomic.
    key: ""
    # -- The global api key for your deployment, user provided.
    api_key: ""

  # List of features to enable for all organizations by default
  default_org_features: []

  field_change_tracking: true
  query_workers: 10
  sync_retry_errors: true
  sync_workers: 10
  task_executor_cleanup_delay_seconds: 10
  tx_buffer_size: 1000

  auth:
    #  -- The email address to use when starting for the first time;
    # this user will be able to add additional users and configure Polytomic.
    root_user: user@example.com

    # -- Base URL for accessing Polytomic; for example, https://polytomic.mycompany.com.
    # This will be used when redirecting back from Google and
    # other integrations after authenticating with OAuth.
    url: https://polytomic.mycompany.com

    # -- Google OAuth Client ID, obtained by creating a OAuth 2.0 Client ID
    google_client_id: ""
    # -- Google OAuth Client Secret, obtained by creating a OAuth 2.0 Client ID
    google_client_secret: ""

    # -- Single player mode
    # If true, no authentication will be required
    single_player: true

    # list of allowed authentication methods
    methods: []

    workos_api_key: ""
    workos_client_id: ""

  # Postgres connection settings
  postgres:
    # -- Postgres user name
    username: polytomic
    # -- Password for given user
    password: polytomic
    # -- Host address
    host: polytomic-postgresql
    # -- Port number
    port: 5432
    # -- Database name
    database: polytomic
    # -- enable/disable SSL
    ssl: false

    auto_migrate: true

  # Redis connection settings
  redis:
    username:
    password: polytomic
    host: polytomic-redis-master
    port: 6379
    ssl: false

  # The bucket stores log files containing records involved in a sync execution.
  # Record logging is enabled from the Settings page within the app ({POLYTOMIC_URL}/user).
  # Credentials for AWS are pulled through the AWS-SDK's credential chain and the user/role must have permissions for the bucket.
  # We recommend setting a bucket lifecycle rule to automatically expire objects.
  s3:
    operational_bucket: "s3://operations"

    # -- Holds record logs for syncs
    record_log_bucket: "records"


    # -- DEPRECATED!!
    #
    # use operational_bucket instead of log_bucket and query_bucket
    #
    # -- The bucket stores log files containing records involved in a sync execution
    log_bucket: ""
    # -- The bucket is used to store query exports from Polytomic's SQL Runner.
    query_bucket: ""
    #
    #


    # -- Access key ID
    access_key_id: ""
    # -- Secret access key
    secret_access_key: ""
    # -- S3 region e.g. us-east-1
    region: us-east-1

  cache:
    enabled: true
    volume_name: polytomic-cache
    size: 20Mi
    storage_class: ""

  jobs:
    volume_name: polytomic-cache
    secret: polytomic-config

  # Integrations
  airtable_client_secret: ""
  asana_client_id: ""
  asana_client_secret: ""
  bingads_client_id: ""
  bingads_client_secret: ""
  bingads_developer_token: ""
  ccloud_api_key: ""
  ccloud_api_secret: ""
  fbaudience_client_id: ""
  fbaudience_client_secret: ""
  fb_login_configuration_id: ""
  front_client_id: ""
  front_client_secret: ""
  github_client_id: ""
  github_client_secret: ""
  github_deploy_key: ""
  googleads_client_id: ""
  googleads_client_secret: ""
  googleads_developer_token: ""
  googlesearchconsole_client_id: ""
  googlesearchconsole_client_secret: ""
  googleworkspace_client_id: ""
  googleworkspace_client_secret: ""
  gsheets_api_key: ""
  gsheets_app_id: ""
  gsheets_client_id: ""
  gsheets_client_secret: ""
  hubspot_client_id: ""
  hubspot_client_secret: ""
  intercom_client_id: ""
  intercom_client_secret: ""
  linkedinads_client_id: ""
  linkedinads_client_secret: ""
  outreach_client_id: ""
  outreach_client_secret: ""
  pardot_client_id: ""
  pardot_client_secret: ""
  salesforce_client_id: ""
  salesforce_client_secret: ""
  shipbob_client_id: ""
  shipbob_client_secret: ""
  shopify_client_id: ""
  shopify_client_secret: ""
  smartsheet_client_id: ""
  smartsheet_client_secret: ""
  stripe_secret_key: ""
  zendesk_client_id: ""
  zendesk_client_secret: ""


  # -- Telemetry
  metrics: false
  tracing: false

#############################################################################################
# Convience subcharts for dependencies
postgresql:
  enabled: true
  auth:
    username: polytomic
    password: polytomic
    database: polytomic

redis:
  enabled: true
  auth:
    password: polytomic
    enabled: true
  architecture: standalone

minio:
  enabled: true
  rootUser: polytomic
  rootPassword: polytomic
  persistence:
    size: 50Mi
  mode: standalone

nfs-server-provisioner:
  enabled: true
  image:
    repository: k8s.gcr.io/sig-storage/nfs-provisioner
    tag: v3.0.1

  persistence:
    enabled: true

  storageClass:
    create: true
    ## Set a provisioner name. If unset, a name will be generated.
    # provisionerName:

    ## Set StorageClass as the default StorageClass
    ## Ignored if storageClass.create is false
    defaultClass: false

    ## Set a StorageClass name
    ## Ignored if storageClass.create is false
    name: nfs

    # set to null to prevent expansion
    allowVolumeExpansion: true
    ## StorageClass parameters
    parameters: {}

#############################################################################################

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

worker:
  replicaCount: 1
  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  sidecarContainers: []


web:
  replicaCount: 1
  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  sidecarContainers:
  # - image: busybox
  #   name: sidecar-example
  #   args:
  #    - /bin/sh
  #    - -c
  #    - >
  #     while true; do
  #       echo "$(date) INFO hello";
  #       sleep 1;
  #     done
sync:
  replicaCount: 1
  resources: {}
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  sidecarContainers: []

dev:
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

development: false
