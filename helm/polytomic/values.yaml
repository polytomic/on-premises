# Default values for polytomic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: polytomic-jake
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


polytomic:
  # valid values are debug, info, warn, error; the default is info
  log_level: info

  deployment:
    # A unique identifier for your on premises deploy, provided by Polytomic.
    name: ""
    # The license key for your deployment, provided by Polytomic.
    key: ""

  auth:
    # The email address to use when starting for the first time; 
    # this user will be able to add additional users and configure Polytomic.
    root_user: joe@gmail.com

    # Base URL for accessing Polytomic; for example, https://polytomic.mycompany.com. 
    # This will be used when redirecting back from Google and 
    # other integrations after authenticating with OAuth.
    url: https://polytomic.mycompany.com

    #  Google OAuth Client ID and secret, obtained by creating a OAuth 2.0 Client ID
    google_client_id: ""
    google_client_secret: ""
  
  # Postgres connection settings
  postgres: 
   # Postgres user name
    username: polytomic
    # Password for given user
    password: polytomic
    # Host address
    host: polytomic-postgresql
    # Port number
    port: 5432
    # Database name
    database: polytomic
    # enable/disable SSL
    ssl: false

  # Redis connection settings
  redis:
    username:
    password: polytomic
    host: polytomic-redis-master
    port: 6379
    ssl: false

  # The bucket stores log files containing records involved in a sync execution.
  # Record logging is enabled from the Settings page within the app ({POLYTOMIC_URL}/user). 
  # Credentials for AWS are pulled through the AWS-SDK's credential chain and the user/role must have permissions for the bucket. 
  # We recommend setting a bucket lifecycle rule to automatically expire objects.
  s3:
    # The bucket stores log files containing records involved in a sync execution
    log_bucket: executions
    # The bucket is used to store query exports from Polytomic's SQL Runner.
    query_bucket: queries
    # S3 region e.g. us-east-1
    region: us-east-1


# Convience subcharts for dependencies
postgresql:
  enabled: true
  auth:
    username: polytomic
    password: polytomic
    database: polytomic

redis:
  enabled: true
  auth:
    password: polytomic
    enabled: true
  architecture: standalone




serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


worker:
  replicaCount: 1
  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000


web:
  replicaCount: 3
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

sync:
  replicaCount: 1
  resources: {}
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

